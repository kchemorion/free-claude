{
  "name": "claude-vscode",
  "displayName": "Claude VS Code",
  "description": "Claude AI assistant for VS Code",
  "version": "0.0.2",
  "publisher": "YourPublisherName",
  "private": true,
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/yourusername/claude-vscode"
  },
  "engines": {
    "vscode": "^1.80.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onCommand:claude-vscode.openChat"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "claude-assistant",
          "title": "Claude Assistant",
          "icon": "media/claude-icon.svg"
        }
      ]
    },
    "views": {
      "claude-assistant": [
        {
          "type": "webview",
          "id": "claudeAssistant.chatView",
          "name": "Chat",
          "visibility": "visible"
        }
      ]
    },
    "commands": [
      {
        "command": "claude-vscode.openChat",
        "title": "Open Chat",
        "category": "Claude"
      },
      {
        "command": "claudeAssistant.generateCode",
        "title": "Claude: Generate Code"
      },
      {
        "command": "claudeAssistant.generateTests",
        "title": "Claude: Generate Tests"
      },
      {
        "command": "claudeAssistant.suggestCommitMessage",
        "title": "Claude: Suggest Commit Message"
      },
      {
        "command": "claudeAssistant.reviewChanges",
        "title": "Claude: Review Changes"
      },
      {
        "command": "claudeAssistant.generatePRDescription",
        "title": "Claude: Generate PR Description"
      },
      {
        "command": "claudeAssistant.generateDocumentation",
        "title": "Claude: Generate Documentation"
      },
      {
        "command": "claudeAssistant.openChat",
        "title": "Claude: Open Chat Panel"
      }
    ],
    "keybindings": [
      {
        "command": "claudeAssistant.generateCode",
        "key": "ctrl+shift+g",
        "mac": "cmd+shift+g"
      },
      {
        "command": "claudeAssistant.generateTests",
        "key": "ctrl+shift+t",
        "mac": "cmd+shift+t"
      },
      {
        "command": "claudeAssistant.openChat",
        "key": "ctrl+shift+c",
        "mac": "cmd+shift+c",
        "when": "editorTextFocus"
      }
    ],
    "configuration": {
      "title": "Claude VS Code",
      "properties": {
        "claude-vscode.model": {
          "type": "string",
          "default": "claude-3-opus-20240229",
          "enum": [
            "claude-3-opus-20240229",
            "claude-3-sonnet-20240229",
            "claude-3-haiku-20240307",
            "claude-instant-1.2",
            "claude-2.1",
            "claude-2.0"
          ],
          "enumDescriptions": [
            "Most capable Claude 3 model, best for complex tasks",
            "Balanced Claude 3 model for most tasks",
            "Fastest Claude 3 model, best for quick responses",
            "Fast, cost-effective model for simpler tasks",
            "Reliable model for most tasks",
            "Legacy model, not recommended for new projects"
          ],
          "description": "The Claude model to use for chat"
        },
        "claude-vscode.maxTokens": {
          "type": "number",
          "default": 4000,
          "description": "Maximum number of tokens to generate in responses"
        },
        "claudeAssistant.apiKey": {
          "type": "string",
          "default": "",
          "description": "API key for Claude AI"
        },
        "claudeAssistant.model": {
          "type": "string",
          "default": "claude-3-sonnet-20240229",
          "enum": [
            "claude-3-opus-20240229",
            "claude-3-sonnet-20240229",
            "claude-3-haiku-20240229",
            "claude-2.1",
            "claude-2"
          ],
          "enumDescriptions": [
            "Most capable model (Claude 3 Opus)",
            "Balanced model (Claude 3 Sonnet)",
            "Fastest model (Claude 3 Haiku)",
            "Previous generation, good for most tasks",
            "Legacy model"
          ],
          "description": "Claude model to use for responses"
        },
        "claudeAssistant.autoExecuteCommands": {
          "type": "boolean",
          "default": false,
          "description": "Automatically execute shell commands from code blocks (use with caution)"
        },
        "claudeAssistant.autoCreateFiles": {
          "type": "boolean",
          "default": false,
          "description": "Automatically create files from code blocks"
        },
        "claudeAssistant.defaultFileLocation": {
          "type": "string",
          "default": "",
          "description": "Default location for created files (relative to workspace root)"
        },
        "claudeAssistant.fileTypes": {
          "type": "object",
          "default": {
            "javascript": ".js",
            "typescript": ".ts",
            "python": ".py",
            "java": ".java",
            "html": ".html",
            "css": ".css",
            "jsx": ".jsx",
            "tsx": ".tsx"
          },
          "description": "File extensions to use for different languages"
        }
      }
    },
    "menus": {
      "editor/context": [
        {
          "command": "claudeAssistant.generateCode",
          "group": "claudeAI@1"
        },
        {
          "command": "claudeAssistant.generateTests",
          "group": "claudeAI@2"
        },
        {
          "command": "claudeAssistant.generateDocumentation",
          "group": "claudeAI@3"
        }
      ],
      "scm/title": [
        {
          "command": "claudeAssistant.suggestCommitMessage",
          "group": "navigation"
        },
        {
          "command": "claudeAssistant.reviewChanges",
          "group": "navigation"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/better-sqlite3": "^7.6.12",
    "@types/glob": "^8.1.0",
    "@types/marked": "^5.0.2",
    "@types/mocha": "^10.0.1",
    "@types/node": "20.2.5",
    "@types/vscode": "^1.80.0",
    "@typescript-eslint/eslint-plugin": "^5.59.8",
    "@typescript-eslint/parser": "^5.59.8",
    "@vscode/test-electron": "^2.3.2",
    "eslint": "^8.41.0",
    "glob": "^8.1.0",
    "mocha": "^10.2.0",
    "ts-loader": "^9.4.3",
    "typescript": "^5.1.3",
    "webpack": "^5.85.0",
    "webpack-cli": "^5.1.1"
  },
  "dependencies": {
    "@modelcontextprotocol/sdk": "^1.0.3",
    "axios": "^1.6.7",
    "better-sqlite3": "^8.4.0",
    "marked": "^5.0.2"
  }
}
